{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/services/collaboration.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nimport { routing} from './app.routes';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { EditorComponent } from './components/editor/editor.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    EditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tredirectTo: 'problems',\n\t\tpathMatch: 'full'\n\t},\n\t{\n\t\tpath:'problems',\n\t\tcomponent: ProblemListComponent\n\t},\n\t{\n\t\tpath: 'problems/:id',\n\t\tcomponent: ProblemDetailComponent\n\t},\n\t{\n\t\tpath: '**',\n\t\tredirectTo: 'problems',\n\t}\n];\n\nexport const routing = RouterModule.forRoot(routes);","module.exports = \"@media screen { \\n #editor { \\n   height: 600px; \\n } \\n  .lang-select { \\n   width: 100px; \\n   margin-right: 10px; \\n } \\n  header .btn { \\n   margin: 0 5px; \\n } \\n  footer .btn { \\n   margin: 0 5px; \\n } \\n  .editor-footer, .editor-header { \\n   margin: 10px 0; \\n } \\n  .cursor { \\n   /*position:absolute;*/ \\n   background: rgba(0, 250, 0, 0.5); \\n   z-index: 40; \\n   width: 2px!important \\n } \\n}\"","module.exports = \"<section>\\n  <header class=\\\"editor-header\\\">\\n    <div class=\\\"row\\\">\\n      <select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\"\\n        [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n      <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n        {{language}}\\n      </option>\\n      </select>\\n      <!--reset button -->\\n      <!-- Button trigger modal -->\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\n        Reset\\n      </button>\\n\\n      <!-- Modal -->\\n      <div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Are you sure</h5>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              You will lose current code in the editor, are you sure?\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\"\\n              (click)=\\\"resetEditor()\\\">Reset</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </header>\\n\\n  <div id=\\\"editor\\\">\\n  </div><!-- This is the body -->\\n  \\n  <footer class=\\\"editor-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" \\n      (click)=\\\"submit()\\\">Submit Solution</button>\\n  </footer>\\n</section>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { CollaborationService } from '../../services/collaboration.service';\ndeclare var ace: any;\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n  editor: any;\n  sessionId: string;\n  public languages: string[] = ['Java', 'Python'];\n  language: string = 'Java';\n\n  defaultContent = {\n    'Java': `public class Example {\n      public static void main(String[] args) {\n        // Type your Java code here\n      }\n    }\n    `,\n    'Python': `class Solution:\n      def example():\n        # write your Python code here`\n  };\n\n  constructor(private collaboration: CollaborationService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params\n      .subscribe(params => {\n        this.sessionId = params['id'];\n        this.initEditor();\n      });\n  }\n\n  initEditor(): void {\n    this.editor = ace.edit(\"editor\");\n    this.editor.setTheme(\"ace/theme/eclipse\");\n    this.resetEditor();\n\n    document.getElementsByTagName('textarea')[0].focus();\n\n    // set up collaboration socket\n    this.collaboration.init(this.editor, this.sessionId);\n\n    this.editor.lastAppliedChange = null;\n\n    // register change callback\n    this.editor.on('change', (e) => {\n      console.log('editor changes: ' + JSON.stringify(e));\n\n      // if the change is initiated from the current browser session\n      // then send to the server\n      if (this.editor.lastAppliedChange != e) {\n        this.collaboration.change(JSON.stringify(e));\n      }\n    })\n  }\n\n  resetEditor(): void {\n    this.editor.getSession().setMode(\"ace/mode/\" + this.language.toLowerCase());\n    this.editor.setValue(this.defaultContent[this.language]);\n  }\n\n  setLanguage(language: string): void {\n    this.language = language;\n    this.resetEditor();\n  }\n\n  submit(): void {\n    let usercode = this.editor.getValue();\n    console.log(usercode);\n  }\n\n}","module.exports = \"\"","module.exports = \"<div>\\n \\t<form #formRef=\\\"ngForm\\\">\\n \\t\\t<div class=\\\"form-group\\\">\\n \\t\\t\\t<label for=\\\"problemName\\\">Problem Name</label>\\n \\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\n \\t\\t\\tname=\\\"problemName\\\" placeholder=\\\"Input problem name\\\" required\\n \\t\\t\\t[(ngModel)]=\\\"newProblem.name\\\">\\n \\t\\t</div>\\n\\t \\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t <label for=\\\"problemDesc\\\">Problem Description</label>\\n\\t\\t\\t <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\n\\t\\t\\t name=\\\"problemDesc\\\" placeholder=\\\"Input description\\\" required\\n\\t\\t\\t [(ngModel)]=\\\"newProblem.desc\\\">\\n\\t\\t </div>\\n\\t\\t <div class=\\\"form-group\\\">\\n\\t\\t\\t <label for=\\\"difficulty\\\">Difficulty</label>\\n\\t\\t\\t <select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n\\t\\t\\t [(ngModel)]=\\\"newProblem.difficulty\\\">\\n\\t\\t\\t <option *ngFor=\\\"let difficulty of difficulties\\\"\\n\\t\\t\\t[value]=\\\"difficulty\\\">\\n\\t\\t\\t {{difficulty}}\\n\\t\\t\\t </option>\\n\\t\\t\\t </select>\\n\\t\\t </div>\\n\\t\\t <div class=\\\"row\\\">\\n\\t\\t\\t <div class=\\\"col-md-12\\\">\\n\\t\\t\\t\\t <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\"\\n\\t\\t\\t\\t (click)=\\\"addProblem()\\\">Add problem</button>\\n\\t\\t\\t </div>\\n\\t\\t </div>\\n\\t</form>\\n</div>\\n<br/>\\n<br/>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\n\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n\t id: 0,\n\t name: '',\n\t desc: '',\n\t difficulty: 'easy'\n})\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\n\nexport class NewProblemComponent implements OnInit {\n\tnewProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n \tdifficulties: string[] = ['easy', 'medium', 'hard', 'super'];\n  \tconstructor(private dataService: DataService) {}\n\n  \tngOnInit() {\n\n  }\n\n  \t addProblem() {\n \t\t\tthis.dataService.addProblem(this.newProblem);\n // assign newProblem a new problem instance\n // Otherwise newProblem have same reference as the one we added to\tthe list\n // then when next time add new problem, it will override the problem we have already add into the problem list.\n \t\t\tthis.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n\\t<div class = \\\"row\\\">\\n\\t\\t<div class=\\\"col-sm-12 col-md-4\\\">\\n\\t \\t\\t<div>\\n\\t \\t\\t\\t<h2>\\n\\t \\t\\t\\t\\t{{problem.id}}. {{problem.name}}\\n\\t \\t\\t\\t</h2>\\n\\t \\t\\t\\t<p>\\n\\t \\t\\t\\t\\t{{problem.desc}}\\n\\t \\t\\t\\t</p>\\n\\t \\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"hidden-xs col-sm-12 col-md-8\\\">\\n\\t\\t\\t<app-editor></app-editor>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n\tproblem: Problem;\n\n  constructor(private dataService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n  \tthis.route.params.subscribe(params => {\n  \t\t//this.problem = this.dataService.getProblem(+params['id']);\n      this.dataService.getProblem(+params['id'])\n        .then(problem => this.problem = problem);\n  \t});\n  }\n}\n","module.exports = \".difficult {\\n min-width: 65px;\\n margin-right: 18px;\\n}\\n.badge.difficulty {\\n padding-top: 0.6em;\\n color: #fbfdfa;\\n font-size: 12px;\\n}\\n.title {\\n font-size: 1.2em;\\n}\\n.diff-easy {\\n background-color: #42ebf4;\\n}\\n.diff-medium {\\n background-color: #92cf5c;\\n}\\n.diff-hard {\\n background-color: #dd0d1e;\\n}\\n.diff-super{\\n background-color: #8d16e2;\\n}\"","module.exports = \" <div class=\\\"container\\\">\\n \\t<app-new-problem></app-new-problem>\\n \\t<div class=\\\"list-group\\\">\\n \\t\\t<a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\" \\n \\t\\t[routerLink]=\\\"['/problems', problem.id]\\\">\\n \\t\\t\\t<span class=\\\"{{'pull-left badge difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">\\n \\t\\t\\t{{problem.difficulty}}\\n\\t\\t\\t</span>\\n \\t\\t\\t<strong class=\\\"title\\\">{{problem.id}}. {{problem.name}}</strong>\\n \\t\\t</a>\\n \\t</div>\\n </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\n\nexport class ProblemListComponent implements OnInit {\n problems: Problem[];\n\tsubscriptionProblems: Subscription;\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n  \tthis.getProblems();\n  }\n\n  ngOnDestroy() {\n  \tthis.subscriptionProblems.unsubscribe();\n  }\n\n  getProblems() {\n  \t//this.problems = this.dataService.getProblems();\n  \tthis.subscriptionProblems = this.dataService.getProblems()\n  \t\t.subscribe(problems => this.problems = problems);\n  }\n\n}\n","\nimport { Injectable } from '@angular/core';\n\ndeclare var io: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n\tcollaborationSocket: any;\n\n  constructor() { }\n\n  init(editor: any, sessionId: string): void {\n  \t// establish socket connection\n  \tthis.collaborationSocket = io(window.location.origin, { query: 'sessionId=' + sessionId});\n\n  \t// when receive change from the server, apply to local browser session\n  \tthis.collaborationSocket.on('change', (delta: string) => {\n  \t\tconsole.log('collaboration: editor changes ' + delta);\n  \t\tdelta = JSON.parse(delta);\n  \t\teditor.lastAppliedChange = delta;\n  \t\teditor.getSession().getDocument().applyDeltas([delta]);\n  \t});\n  }\n\n  // send to server (which will forward to other participants)\n  change(delta: string): void {\n  \tconsole.log('send message' + delta);\n  \tthis.collaborationSocket.emit('change', delta);\n  }\n}","import { Injectable } from '@angular/core';\nimport { Problem } from \"../models/problem.model\";\n//import { PROBLEMS } from \"../mock-problems\";//fake \"databse\"\n\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\t// problems: Problem[] = PROBLEMS;\n  \tprivate _problemSource = new BehaviorSubject<Problem[]>([]);\n\n  \tconstructor(private httpClient: HttpClient) { }\n\n  // \tgetProblems(): Problem[] {\n \t// \treturn this.problems;\n \t// }\n\n \t// getProblem(id: number): Problem {\n \t// \treturn this.problems.find((problem) => problem.id === id);\n \t// }\n\n \t// addProblem(problem: Problem) {\n \t// \t// assign the id\n \t// \tproblem.id = this.problems.length + 1;\n \t// \tthis.problems.push(problem);\n \t// }\n \t  getProblems(): Observable<Problem[]> {\n    this.httpClient.get('api/v1/problems')\n      .toPromise()\n      .then((res: any) => {\n        this._problemSource.next(res);\n      })\n      .catch(this.handleError);\n\n     return this._problemSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    return this.httpClient.get(`api/v1/problems/${id}`)\n      .toPromise()\n      .then((res: any) => res)\n      .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem) {\n    const options = { headers: new HttpHeaders({ 'Content-Type': 'application/json'})};\n    return this.httpClient.post('api/v1/problems', problem, options)\n      .toPromise()\n      .then((res: any) => {\n        this.getProblems();\n\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    return Promise.reject(error.body || error);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}